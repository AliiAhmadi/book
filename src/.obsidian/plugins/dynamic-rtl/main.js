/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => DynamicRTL
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var DynamicRTL = class extends import_obsidian.Plugin {
  async onload() {
    const chars = ["\u0627", "\u0628", "\u067E", "\u062A", "\u062B", "\u062C", "\u0686", "\u062D", "\u062E", "\u0633", "\u0634", "\u062F", "\u0630", "\u0631", "\u0632", "\u0698", "\u0633", "\u0634", "\u0635", "\u0636", "\u0637", "\u0638", "\u0639", "\u063A", "\u06A9", "\u06AF", "\u0644", "\u0645", "\u0646", "\u0648", "\u0647", "\u06CC", "\u06F1", "\u06F2", "\u06F3", "\u06F4", "\u06F5", "\u06F6", "\u06F7", "\u06F8", "\u06F9", "\u064A", "\u0626", "\u0622", "\u0643", "\u0621", "\u0624", "\u0625", "\u0623", "\u0629", "\u05E7", "\u05E8", "\u05D0", "\u05D8", "\u05D5", "\u05DF", "\u05DD", "\u05E4", "\u05E9", "\u05D3", "\u05D2", "\u05DB", "\u05E2", "\u05D9", "\u05D7", "\u05DC", "\u05DA", "\u05E3", "\u05D6", "\u05E1", "\u05D1", "\u05D4", "\u05E0", "\u05DE", "\u05E6", "\u05EA", "\u05E5"];
    this.registerMarkdownPostProcessor((container, context) => {
      container.querySelectorAll("p,div.cm-line,h1,h2,h3,h4,h5,h6,div.callout-title-inner").forEach((element) => {
        element.setAttribute("dir", "auto");
      });
      container.querySelectorAll("table,ol,ul,pre").forEach((element) => {
        var _a;
        (_a = element.parentElement) == null ? void 0 : _a.setAttribute("dir", "auto");
      });
      container.querySelectorAll(".callout-title").forEach((element) => {
        if (chars.includes(element.innerText.charAt(0))) {
          element.style.direction = "rtl";
        }
      });
      container.querySelectorAll("blockquote").forEach((element) => {
        if (chars.includes(element.innerText.charAt(1))) {
          element.style.borderLeft = "0";
          element.style.borderRight = "var(--blockquote-border-thickness) solid var(--blockquote-border-color)";
          element.style.marginRight = "23px";
          const innerContent = element.querySelector("p");
          if (innerContent) {
            innerContent.style.marginRight = "23px";
          }
        }
      });
      container.querySelectorAll("ul").forEach((element) => {
        if (chars.includes(element.innerText.charAt(1))) {
          element.querySelectorAll(".list-bullet").forEach((bullet) => {
            bullet.style.float = "right";
            bullet.classList.add("rtl-bullet-point");
          });
        }
      });
      container.querySelectorAll("h1,h2,h3,h4,h5,h6").forEach((element) => {
        if (chars.includes(element.innerText.charAt(0))) {
          const icon = element.querySelector("div");
          if (icon) {
            icon.style.marginRight = "-22px";
            icon.style.float = "right";
          }
        }
      });
    });
  }
};
